{"version":3,"sources":["index.js"],"names":["SettingButton","props","_this","Object","_Users_RoseSamuel_Desktop_pomodoro_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_RoseSamuel_Desktop_pomodoro_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_RoseSamuel_Desktop_pomodoro_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handlePlus","bind","_Users_RoseSamuel_Desktop_pomodoro_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleMinus","running","id","setSession","pastValue","setBreak","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","labelID","label","plusID","type","onClick","lengthID","time","minusID","React","Component","Pomodoro","_this2","state","startTime","totalMillis","storeMillis","intervalID","numSesMins","numBrkMins","stopTime","increment","handleStartStop","initializeTime","reset","d","Date","setState","getTime","_this3","setInterval","ender","clearInterval","start","current","playBeep","breakTime","sessionTime","sound","document","getElementById","play","setTimeout","pause","currentTime","millisRemaining","secondsRemaining","Math","floor","minutes","formatSeconds","slice","formatMinutes","src","ReactDOM","render"],"mappings":"8KAKMA,qBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,WAAaP,EAAKO,WAAWC,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClBA,EAAKU,YAAcV,EAAKU,YAAYF,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAJFA,4EASbG,KAAKJ,MAAMY,UACc,mBAAlBR,KAAKJ,MAAMa,GACpBT,KAAKJ,MAAMc,WAAWV,KAAKJ,MAAMe,UAAY,GAClB,iBAAlBX,KAAKJ,MAAMa,IACpBT,KAAKJ,MAAMgB,SAASZ,KAAKJ,MAAMe,UAAY,0CAKzCX,KAAKJ,MAAMY,UACc,mBAAlBR,KAAKJ,MAAMa,GACpBT,KAAKJ,MAAMc,WAAWV,KAAKJ,MAAMe,UAAY,GAClB,iBAAlBX,KAAKJ,MAAMa,IACpBT,KAAKJ,MAAMgB,SAASZ,KAAKJ,MAAMe,UAAY,qCAI7C,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKN,GAAIT,KAAKJ,MAAMqB,QAASD,UAAU,iBACpChB,KAAKJ,MAAMsB,OAEdL,EAAAC,EAAAC,cAAA,OACEN,GAAIT,KAAKJ,MAAMuB,OACfH,UAAU,SACVI,KAAK,OACLC,QAASrB,KAAKI,YAJhB,KAQAS,EAAAC,EAAAC,cAAA,OAAKN,GAAIT,KAAKJ,MAAM0B,SAAUN,UAAU,gBACrChB,KAAKJ,MAAM2B,MAEdV,EAAAC,EAAAC,cAAA,OACEN,GAAIT,KAAKJ,MAAM4B,QACfR,UAAU,SACVI,KAAK,QACLC,QAASrB,KAAKO,aAJhB,aA3CoBkB,IAAMC,YAyD5BC,cACJ,SAAAA,EAAY/B,GAAO,IAAAgC,EAAA,OAAA9B,OAAAC,EAAA,EAAAD,CAAAE,KAAA2B,IACjBC,EAAA9B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6B,GAAAxB,KAAAH,KAAMJ,KACDiC,MAAQ,CAEXrB,SAAS,EAETsB,UAAW,KAEXC,YAAa,EAEbC,YAAa,EAEbC,WAAY,KAEZC,WAAY,GAEZC,WAAY,EAEZjB,MAAO,WAGTU,EAAKE,UAAYF,EAAKE,UAAUzB,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA8B,KACjBA,EAAKQ,SAAWR,EAAKQ,SAAS/B,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA8B,KAChBA,EAAKS,UAAYT,EAAKS,UAAUhC,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA8B,KACjBA,EAAKU,gBAAkBV,EAAKU,gBAAgBjC,KAArBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA8B,KACvBA,EAAKW,eAAiBX,EAAKW,eAAelC,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA8B,KACtBA,EAAKhB,SAAWgB,EAAKhB,SAASP,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA8B,KAChBA,EAAKlB,WAAakB,EAAKlB,WAAWL,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA8B,KAClBA,EAAKY,MAAQZ,EAAKY,MAAMnC,KAAXP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA8B,KA5BIA,iFAiCZ5B,KAAK6B,MAAMrB,QAGdR,KAAKoC,WAFLpC,KAAK8B,qDAOP,IAAMW,EAAI,IAAIC,KACd1C,KAAK2C,SAAS,CAAEb,UAAWW,EAAEG,gDAGnB,IAAAC,EAAA7C,KACVA,KAAKuC,iBACLvC,KAAK2C,SAAS,CAAEnC,SAAS,IACzBR,KAAK2C,SAAS,CACZV,WAAYa,YAAY,WACtBD,EAAKR,YACLQ,EAAKE,SACJ,0CAML/C,KAAK2C,SAAS,CAAEnC,SAAS,EAAOwB,YAAahC,KAAK6B,MAAME,cACxDiB,cAAchD,KAAK6B,MAAMI,8CAGjBgB,GAER,IAAMC,EAAU,IAAIR,KAGpB1C,KAAK2C,SAAS,CACZZ,YACEmB,EAAQN,UAAY5C,KAAK6B,MAAMC,UAAY9B,KAAK6B,MAAMG,+CAInDT,GACHA,GAAQ,IAAMA,EAAO,GACvBvB,KAAK2C,SAAS,CAAER,WAAYZ,uCAIrBA,GACLA,GAAQ,IAAMA,EAAO,GACvBvB,KAAK2C,SAAS,CAAET,WAAYX,oCAW1B,IAAkB,KAJC,YAArBvB,KAAK6B,MAAMX,MACPlB,KAAK6B,MAAMK,WACXlC,KAAK6B,MAAMM,YAEanC,KAAK6B,MAAME,YAAc,IAE5B,YAArB/B,KAAK6B,MAAMX,OACblB,KAAKmD,WAGc,YAArBnD,KAAK6B,MAAMX,MAAsBlB,KAAKoD,YAAcpD,KAAKqD,kDAK3D,IAAIC,EAAQC,SAASC,eAAe,QACpCF,EAAMG,OACNC,WAAW,WACTJ,EAAMK,QACNL,EAAMM,YAAc,GACnB,0CAIH5D,KAAKuC,iBACLvC,KAAK2C,SAAS,CACZZ,YAAa,EACbC,YAAa,EACbd,MAAO,gDAKTlB,KAAKuC,iBACLvC,KAAK2C,SAAS,CACZZ,YAAa,EACbC,YAAa,EACbd,MAAO,4CAKT,IAAIoC,EAAQC,SAASC,eAAe,QACpCF,EAAMK,QACNL,EAAMM,YAAc,EACpB5D,KAAKoC,WACLpC,KAAK2C,SAAS,CACZnC,SAAS,EACTsB,UAAW,KACXC,YAAa,EACbC,YAAa,EACbC,WAAY,KACZC,WAAY,GACZC,WAAY,EACZjB,MAAO,6CAKT,IAKM2C,EAAkB,IAAkB,KAJnB,YAArB7D,KAAK6B,MAAMX,MACPlB,KAAK6B,MAAMK,WACXlC,KAAK6B,MAAMM,YAEiCnC,KAAK6B,MAAME,YACvD+B,EAAmBC,KAAKC,MAAMH,EAAkB,KAChDI,EAAUF,KAAKC,MAAMF,EAAmB,IAGxCI,GAAiB,IAFPJ,EAAmB,IAEGK,OAAO,GACvCC,GAAiB,IAAMH,GAASE,OAAO,GAE7C,OACEtD,EAAAC,EAAAC,cAAA,OAAKN,GAAG,aACNI,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SACEN,GAAG,OACH4D,IAAI,yDACJjD,KAAK,eAEPP,EAAAC,EAAAC,cAAA,OAAKN,GAAG,mBACNI,EAAAC,EAAAC,cAAA,OAAKN,GAAG,eAAeT,KAAK6B,MAAMX,OAClCL,EAAAC,EAAAC,cAAA,OAAKN,GAAG,aAAa2D,EAAgB,IAAMF,IAE7CrD,EAAAC,EAAAC,cAAA,OAAKN,GAAG,aACNI,EAAAC,EAAAC,cAACpB,EAAD,CACEc,GAAG,iBACHS,MAAM,iBACNK,KAAMvB,KAAK6B,MAAMK,WACjBvB,UAAWX,KAAK6B,MAAMK,WACtBxB,WAAYV,KAAKU,WACjBF,QAASR,KAAK6B,MAAMrB,QACpBS,QAAQ,gBACRE,OAAO,oBACPK,QAAQ,oBACRF,SAAS,mBAEXT,EAAAC,EAAAC,cAAA,OAAKN,GAAG,eACNI,EAAAC,EAAAC,cAAA,OAAKN,GAAG,aAAaY,QAASrB,KAAKsC,iBAChCtC,KAAK6B,MAAMrB,QAAU,OAAS,SAEjCK,EAAAC,EAAAC,cAAA,OAAKN,GAAG,QAAQY,QAASrB,KAAKwC,OAA9B,UAIF3B,EAAAC,EAAAC,cAACpB,EAAD,CACEc,GAAG,eACHS,MAAM,eACNK,KAAMvB,KAAK6B,MAAMM,WACjBxB,UAAWX,KAAK6B,MAAMM,WACtBvB,SAAUZ,KAAKY,SACfJ,QAASR,KAAK6B,MAAMrB,QACpBS,QAAQ,cACRE,OAAO,kBACPK,QAAQ,kBACRF,SAAS,0BA5MEG,IAAMC,WAoN7B4C,IAASC,OAAO1D,EAAAC,EAAAC,cAACY,EAAD,MAAc4B,SAASC,eAAe","file":"static/js/main.60bd542a.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\n//Component for 'plus' and 'minus' buttons of clock\nclass SettingButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePlus = this.handlePlus.bind(this);\n    this.handleMinus = this.handleMinus.bind(this);\n  }\n\n  //If clock is not running, increase pastValue (session or break) by 1\n  handlePlus() {\n    if (this.props.running) {\n    } else if (this.props.id === \"session-button\") {\n      this.props.setSession(this.props.pastValue + 1);\n    } else if (this.props.id === \"break-button\") {\n      this.props.setBreak(this.props.pastValue + 1);\n    }\n  }\n  //If clock is not running, decrease pastValue (session or break) by 1\n  handleMinus() {\n    if (this.props.running) {\n    } else if (this.props.id === \"session-button\") {\n      this.props.setSession(this.props.pastValue - 1);\n    } else if (this.props.id === \"break-button\") {\n      this.props.setBreak(this.props.pastValue - 1);\n    }\n  }\n  render() {\n    return (\n      <div className=\"setting-container\">\n        <div id={this.props.labelID} className=\"setting-label\">\n          {this.props.label}\n        </div>\n        <div\n          id={this.props.plusID}\n          className=\"updown\"\n          type=\"plus\"\n          onClick={this.handlePlus}\n        >\n          +\n        </div>\n        <div id={this.props.lengthID} className=\"length-label\">\n          {this.props.time}\n        </div>\n        <div\n          id={this.props.minusID}\n          className=\"updown\"\n          type=\"minus\"\n          onClick={this.handleMinus}\n        >\n          -\n        </div>\n      </div>\n    );\n  }\n}\n\n//Main clock component\nclass Pomodoro extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //True if clock is running\n      running: false,\n      //Time clock is started\n      startTime: null,\n      //Total milliseconds past\n      totalMillis: 0,\n      //Total milliseconds stored when clock is stopped\n      storeMillis: 0,\n      //Id of setInterval that keeps time\n      intervalID: null,\n      //Number of 'session' minutes the clock is set for\n      numSesMins: 25,\n      //Number of 'break' minutes clock is set for\n      numBrkMins: 5,\n      //Label displayed on clock, either \"Session\" or \"Break\"\n      label: \"Session\"\n    };\n\n    this.startTime = this.startTime.bind(this);\n    this.stopTime = this.stopTime.bind(this);\n    this.increment = this.increment.bind(this);\n    this.handleStartStop = this.handleStartStop.bind(this);\n    this.initializeTime = this.initializeTime.bind(this);\n    this.setBreak = this.setBreak.bind(this);\n    this.setSession = this.setSession.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  //If running, call stopTime, else call startTime\n  handleStartStop() {\n    if (!this.state.running) {\n      this.startTime();\n    } else {\n      this.stopTime();\n    }\n  }\n  //Sets startTime to current Date\n  initializeTime() {\n    const d = new Date();\n    this.setState({ startTime: d.getTime() });\n  }\n  //Initializes time, sets clock running to true and sets time increment interval\n  startTime() {\n    this.initializeTime();\n    this.setState({ running: true });\n    this.setState({\n      intervalID: setInterval(() => {\n        this.increment();\n        this.ender();\n      }, 100)\n    });\n  }\n  //Sets 'running' to false and stores the total number of milliseconds that have\n  //passed.  Also clears the previous time interval.\n  stopTime() {\n    this.setState({ running: false, storeMillis: this.state.totalMillis });\n    clearInterval(this.state.intervalID);\n  }\n  //Increments time (called within setInterval)\n  increment(start) {\n    //Initialize date object\n    const current = new Date();\n    //Set totalMillis to the difference between current time and startTime,\n    //plus any millis stored after clock's last stop.\n    this.setState({\n      totalMillis:\n        current.getTime() - this.state.startTime + this.state.storeMillis\n    });\n  }\n  //set numBrkMins to time if time between 0 and 60\n  setBreak(time) {\n    if (time <= 60 && time > 0) {\n      this.setState({ numBrkMins: time });\n    }\n  }\n  //set numSesMins to time if time between 0 and 60\n  setSession(time) {\n    if (time <= 60 && time > 0) {\n      this.setState({ numSesMins: time });\n    }\n  }\n  //Handles timer ending\n  ender() {\n    //Number of minutes timer is set to, depending on if session or break\n    const alarmMins =\n      this.state.label === \"Session\"\n        ? this.state.numSesMins\n        : this.state.numBrkMins;\n    //If time goes below 0 (999 is a buffer so time doesn't decrement immediately)\n    if (999 + alarmMins * 60000 - this.state.totalMillis < 0) {\n      //and it is a session, play alarm sound\n      if (this.state.label === \"Session\") {\n        this.playBeep();\n      }\n      //Toggle from session to break or vice versa\n      this.state.label === \"Session\" ? this.breakTime() : this.sessionTime();\n    }\n  }\n  //Plays html audio tag's mp3\n  playBeep() {\n    let sound = document.getElementById(\"beep\");\n    sound.play();\n    setTimeout(() => {\n      sound.pause();\n      sound.currentTime = 0;\n    }, 4500);\n  }\n  //Initialize and reset time, switch to break mode\n  breakTime() {\n    this.initializeTime();\n    this.setState({\n      totalMillis: 0,\n      storeMillis: 0,\n      label: \"Break\"\n    });\n  }\n  //Initialize and reset time, switch to session mode\n  sessionTime() {\n    this.initializeTime();\n    this.setState({\n      totalMillis: 0,\n      storeMillis: 0,\n      label: \"Session\"\n    });\n  }\n  //Resets timer to default state, and pauses alarm sound\n  reset() {\n    let sound = document.getElementById(\"beep\");\n    sound.pause();\n    sound.currentTime = 0;\n    this.stopTime();\n    this.setState({\n      running: false,\n      startTime: null,\n      totalMillis: 0,\n      storeMillis: 0,\n      intervalID: null,\n      numSesMins: 25,\n      numBrkMins: 5,\n      label: \"Session\"\n    });\n  }\n  render() {\n    //Number of minutes timer is set for (session or break)\n    let alarmMins =\n      this.state.label === \"Session\"\n        ? this.state.numSesMins\n        : this.state.numBrkMins;\n    //Milliseconds remaining on timer (999 is buffer)\n    const millisRemaining = 999 + alarmMins * 60000 - this.state.totalMillis;\n    const secondsRemaining = Math.floor(millisRemaining / 1000);\n    const minutes = Math.floor(secondsRemaining / 60);\n    const seconds = secondsRemaining % 60;\n    //Format minutes and seconds (xx:xx)\n    const formatSeconds = (\"0\" + seconds).slice(-2);\n    const formatMinutes = (\"0\" + minutes).slice(-2);\n\n    return (\n      <div id=\"container\">\n        <h1>Pomodoro Clock</h1>\n        <audio\n          id=\"beep\"\n          src=\"http://www.ffmages.com/ffvii/ost/disc-1/11-fanfare.mp3\"\n          type=\"audio/mpeg\"\n        />\n        <div id=\"clock-container\">\n          <div id=\"timer-label\">{this.state.label}</div>\n          <div id=\"time-left\">{formatMinutes + \":\" + formatSeconds}</div>\n        </div>\n        <div id=\"btn-panel\">\n          <SettingButton\n            id=\"session-button\"\n            label=\"Session Length\"\n            time={this.state.numSesMins}\n            pastValue={this.state.numSesMins}\n            setSession={this.setSession}\n            running={this.state.running}\n            labelID=\"session-label\"\n            plusID=\"session-increment\"\n            minusID=\"session-decrement\"\n            lengthID=\"session-length\"\n          />\n          <div id=\"start-reset\">\n            <div id=\"start_stop\" onClick={this.handleStartStop}>\n              {this.state.running ? \"Stop\" : \"Start\"}\n            </div>\n            <div id=\"reset\" onClick={this.reset}>\n              Reset\n            </div>\n          </div>\n          <SettingButton\n            id=\"break-button\"\n            label=\"Break Length\"\n            time={this.state.numBrkMins}\n            pastValue={this.state.numBrkMins}\n            setBreak={this.setBreak}\n            running={this.state.running}\n            labelID=\"break-label\"\n            plusID=\"break-increment\"\n            minusID=\"break-decrement\"\n            lengthID=\"break-length\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Pomodoro />, document.getElementById(\"root\"));\n"],"sourceRoot":""}